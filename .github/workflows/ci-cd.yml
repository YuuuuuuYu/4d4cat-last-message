name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  checks: write

jobs:
  ci:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.SUBMODULE_TOKEN }}
        submodules: true
      
    - name: Setup JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
    
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
    
    - name: Cache Gradle
      id: cache-gradle
      uses: actions/cache@v4
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
         
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Test with Gradle
      run: ./gradlew test
    
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v5
      if: always()
      with:
        report_paths: "**/build/test-results/test/TEST-*.xml"

  cd:
    needs: ci
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.SUBMODULE_TOKEN }}
          submodules: true
        
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
  
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      
      - name: Cache Gradle
        id: cache-gradle
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew bootJar
      
      - name: Copy jar file
        run: mv ./build/libs/*SNAPSHOT.jar ./last-message.jar
        
      - name: (SCP) transfer build file 
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.GABIA_IP }}
          username: ${{ secrets.GABIA_USER }}
          key: ${{ secrets.GABIA_KEY }}
          source: last-message.jar
          target: /home/${{ secrets.GABIA_USER }}
      
      - name: (SSH) connect EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GABIA_IP }}
          username: ${{ secrets.GABIA_USER }}
          key: ${{ secrets.GABIA_KEY }}
          script_stop: true
          script: |
            sudo fuser -k -n tcp 8080 || true
            nohup java -jar last-message.jar > ./output.log 2>&1 &
